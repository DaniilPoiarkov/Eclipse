
name: Build, Test and deploy to an Azure

env:
  AZURE_WEBAPP_NAME: eclipse-dev-app
  AZURE_WEBAPP_PACKAGE_PATH: '.'
  DOTNET_VERSION: '8.0.*'

on:
  push:
    branches: [ "develop" ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Set up dependency caching
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Restore dependencies
        run: dotnet restore ./Eclipse.WebAPI/Eclipse.WebAPI.sln

      - name: Build
        run: dotnet build ./Eclipse.WebAPI/Eclipse.WebAPI.sln --configuration Release
        
      - name: Run tests
        run: dotnet test ./Eclipse.WebAPI/Eclipse.WebAPI.sln --configuration Release

      - name: Publish
        run: dotnet publish ./Eclipse.WebAPI/Eclipse.WebAPI.sln -c Release -o ${{env.DOTNET_ROOT}}/eclipse

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: eclipse-dev-app
          path: ${{env.DOTNET_ROOT}}/eclipse

  deploy:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Development'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: eclipse-dev-app

      - name: Deploy to Azure
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_DEV_PUBLISH_PROFILE }}
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
